services:

  api-mock:
    container_name: api-mock_mod-search
    image: wiremock/wiremock:2.32.0
    networks:
      - mod-search-local
    command:
      - "--verbose"
    ports:
      - "9130:8080"
    volumes:
      - ../src/test/resources/mappings:/home/wiremock/mappings

  opensearch:
    container_name: opensearch_mod-search
    image: dev.folio/opensearch:latest
    build:
      context: opensearch
      dockerfile: Dockerfile
    networks:
      - opensearch-net
      - mod-search-local
    ports:
      - "9200:9200"
    volumes:
      - es-data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"

  opensearch-dashboards:
    container_name: opensearch-dashboards_mod-search
    image: opensearchproject/opensearch-dashboards:2
    ports:
      - "5601:5601"
    expose:
      - "5601"
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: true
    networks:
      - opensearch-net
      - mod-search-local
    depends_on:
      - opensearch

  kafka:
    container_name: kafka_mod-search
    image: apache/kafka-native
    networks:
      - mod-search-local
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://localhost:9091,HOST://0.0.0.0:9092,DOCKER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://localhost:9092,DOCKER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT
      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9091
      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      # Required for a single node cluster
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1


  kafka-ui:
    container_name: kafka-ui_mod-search
    image: ghcr.io/kafbat/kafka-ui:latest
    networks:
      - mod-search-local
    ports:
      - "8080:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
    depends_on:
      - kafka

  postgres:
    container_name: postgres_mod-search
    image: postgres:16-alpine
    networks:
      - mod-search-local
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}

  pgadmin:
    container_name: pgadmin_mod-search
    image: dpage/pgadmin4:8.13
    networks:
      - mod-search-local
    ports:
      - "5050:80"
    volumes:
      - "pgadmin-data:/var/lib/pgadmin"
    environment:
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}

networks:
  mod-search-local:
    driver: bridge
  opensearch-net:

volumes:
  es-data: { }
  db-data: { }
  pgadmin-data: { }
