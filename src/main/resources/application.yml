spring:
  application:
    name: mod-search
  profiles:
    default: "prod"
  threads:
    virtual:
      enabled: true
  jackson:
    default-property-inclusion: non_null
    deserialization:
      fail-on-unknown-properties: false
      accept-single-value-as-array: true
  cloud:
    openfeign:
      okhttp:
        enabled: true
  opensearch:
    username: ${ELASTICSEARCH_USERNAME:}
    password: ${ELASTICSEARCH_PASSWORD:}
    uris: ${ELASTICSEARCH_URL:http://localhost:9200}
    compression-enabled: ${ELASTICSEARCH_COMPRESSION_ENABLED:true}
  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}
    consumer:
      max-poll-records: ${KAFKA_CONSUMER_MAX_POLL_RECORDS:200}
      properties:
        max.poll.interval.ms: 600000
    security:
      protocol: ${KAFKA_SECURITY_PROTOCOL:PLAINTEXT}
    ssl:
      key-store-password: ${KAFKA_SSL_KEYSTORE_PASSWORD:}
      key-store-location: ${KAFKA_SSL_KEYSTORE_LOCATION:}
      trust-store-password: ${KAFKA_SSL_TRUSTSTORE_PASSWORD:}
      trust-store-location: ${KAFKA_SSL_TRUSTSTORE_LOCATION:}
    producer:
      acks: all
      properties:
        enable.idempotence: true
        max.in.flight.requests.per.connection: 5
        retries: 5
  datasource:
    username: ${DB_USERNAME:folio_admin}
    password: ${DB_PASSWORD:folio_admin}
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_DATABASE:okapi_modules}
    hikari:
      data-source-properties:
        reWriteBatchedInserts: true
  liquibase:
    change-log: classpath:changelog/changelog-master.xml
  cache:
    cache-names:
      - es-indices
      - reference-data-cache
      - tenant-languages
      - tenant-features
      - search-preference
      - user-tenants
      - consortium-tenants-cache
    caffeine:
      spec: maximumSize=500,expireAfterWrite=3600s
  main:
    allow-bean-definition-overriding: true

folio:
  environment: ${ENV:folio}
  system:
    schemaName: mod_search__system
    change-log: classpath:changelog/changelog-system.xml
  search-config:
    initial-languages: ${INITIAL_LANGUAGES:eng}
    max-supported-languages: ${MAX_SUPPORTED_LANGUAGES:5}
    max-browse-request-offset: ${MAX_BROWSE_REQUEST_OFFSET:500}
    max-search-batch-request-ids-count: ${MAX_SEARCH_BATCH_REQUEST_IDS_COUNT:20000}
    search-consortium-records-page-size: ${SEARCH_CONSORTIUM_RECORDS_PAGE_SIZE:5000}
    search-features:
      search-all-fields: ${SEARCH_BY_ALL_FIELDS_ENABLED:false}
      browse-contributors: ${BROWSE_CONTRIBUTORS_ENABLED:true}
      browse-subjects: ${BROWSE_SUBJECTS_ENABLED:true}
      browse-classifications: ${BROWSE_CLASSIFICATIONS_ENABLED:true}
      browse-call-numbers: ${BROWSE_CALL_NUMBERS_ENABLED:true}
    indexing:
      data-format: ${INDEXING_DATA_FORMAT:smile}
      instance-children-index-enabled: ${INSTANCE_CHILDREN_INDEX_ENABLED:true}
      instance-children-index-delay-ms: ${INSTANCE_CHILDREN_INDEX_DELAY_MS:60000}
  reindex:
    location-batch-size: ${REINDEX_LOCATION_BATCH_SIZE:1000}
    upload-range-size: ${REINDEX_UPLOAD_RANGE_SIZE:1000}
    upload-range-level: ${REINDEX_UPLOAD_RANGE_LEVEL:3}
    merge-range-size: ${REINDEX_MERGE_RANGE_SIZE:500}
    merge-range-publisher-core-pool-size: ${REINDEX_MERGE_RANGE_PUBLISHER_CORE_POOL_SIZE:3}
    merge-range-publisher-max-pool-size: ${REINDEX_MERGE_RANGE_PUBLISHER_MAX_POOL_SIZE:6}
    merge-range-publisher-retry-interval-ms: ${REINDEX_MERGE_RANGE_PUBLISHER_RETRY_INTERVAL_MS:1000}
    merge-range-publisher-retry-attempts: ${REINDEX_MERGE_RANGE_PUBLISHER_RETRY_ATTEMPTS:5}
  query:
    properties:
      request-timeout: ${SEARCH_QUERY_TIMEOUT:25s}
  system-user:
    enabled: ${SYSTEM_USER_ENABLED:true}
    username: ${SYSTEM_USER_USERNAME:mod-search}
    password: ${SYSTEM_USER_PASSWORD}
    lastname: System
    permissionsFilePath: permissions/mod-search.csv
  stream-ids:
    scroll-query-size: ${SCROLL_QUERY_SIZE:1000}
    retry-interval-ms: ${STREAM_ID_RETRY_INTERVAL_MS:1000}
    retry-attempts: ${STREAM_ID_RETRY_ATTEMPTS:3}
    core-pool-size: ${STREAM_ID_CORE_POOL_SIZE:2}
    max-pool-size: ${STREAM_ID_MAX_POOL_SIZE:2}
    queue-capacity: ${STREAM_ID_QUEUE_CAPACITY:500}
  kafka:
    retry-interval-ms: ${KAFKA_RETRY_INTERVAL_MS:2000}
    retry-delivery-attempts: ${KAFKA_RETRY_DELIVERY_ATTEMPTS:6}
    topics:
      - name: search.reindex.range-index
        numPartitions: ${KAFKA_REINDEX_RANGE_INDEX_TOPIC_PARTITIONS:16}
        replicationFactor: ${KAFKA_REINDEX_RANGE_INDEX_TOPIC_REPLICATION_FACTOR:}
    listener:
      events:
        concurrency: ${KAFKA_EVENTS_CONCURRENCY:2}
        topic-pattern: ${KAFKA_EVENTS_CONSUMER_PATTERN:(${folio.environment}\.)(.*\.)inventory\.(instance|holdings-record|item|bound-with)}
        group-id: ${folio.environment}-mod-search-events-group
        max-poll-records: ${KAFKA_CONSUMER_EVENTS_MAX_POLL_RECORDS:200}
        max-poll-interval-ms: ${KAFKA_CONSUMER_EVENTS_MAX_POLL_INTERVAL_MS:600000}
      instances:
        concurrency: ${KAFKA_EVENTS_CONCURRENCY:2}
        topic-pattern: (${folio.environment}\.)(.*\.)inventory\.instance
        group-id: ${folio.environment}-mod-search-inventory-group
      authorities:
        concurrency: ${KAFKA_AUTHORITIES_CONCURRENCY:1}
        topic-pattern: ${KAFKA_AUTHORITIES_CONSUMER_PATTERN:(${folio.environment}\.)(.*\.)authorities\.authority}
        group-id: ${folio.environment}-mod-search-authorities-group
      browse-config-data:
        concurrency: ${KAFKA_BROWSE_CONFIG_DATA_CONCURRENCY:1}
        topic-pattern: (${folio.environment}\.)(.*\.)inventory\.(classification-type|call-number-type)
        group-id: ${folio.environment}-mod-search-browse-config-data-group
      location:
        concurrency: ${KAFKA_LOCATION_CONCURRENCY:1}
        topic-pattern: (${folio.environment}\.)(.*\.)inventory\.(location|campus|institution|library)
        group-id: ${folio.environment}-mod-search-location-type-group
      linked-data:
        concurrency: ${KAFKA_LINKED_DATA_CONCURRENCY:1}
        topic-pattern: (${folio.environment}\.)(.*\.)linked-data\.(instance|work|hub)
        group-id: ${folio.environment}-mod-search-linked-data-group
      reindex-range-index:
        concurrency: ${KAFKA_REINDEX_RANGE_INDEX_CONCURRENCY:2}
        topic-pattern: (${folio.environment}\.)(.*\.)search\.reindex\.range-index
        group-id: ${folio.environment}-mod-search-reindex-range-index-group
      reindex-records:
        concurrency: ${KAFKA_REINDEX_RECORDS_CONCURRENCY:2}
        topic-pattern: (${folio.environment}\.)(.*\.)inventory\.reindex-records
        group-id: ${folio.environment}-mod-search-reindex-records-group
  okapiUrl: ${okapi.url:http://localhost:9130}
  logging:
    request:
      enabled: true
    feign:
      enabled: true

server.port: 8081
management:
  endpoints:
    web:
      exposure:
        include: info,health,liquibase,threaddump,heapdump,loggers
      base-path: /admin
  endpoint:
    loggers:
      access: unrestricted

---

spring:
  config:
    activate:
      on-profile: dev
  opensearch:
    compression-enabled: false
logging:
  level:
    org.folio.spring.filter.LoggingRequestFilter: debug
    org.opensearch.client: trace
    org.opensearch.client.sniffer: trace
    tracer: trace

---

spring:
  config:
    activate:
      on-profile: prod
logging:
  level:
    org.folio.spring.filter.LoggingRequestFilter: debug
