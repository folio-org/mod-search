openapi: 3.0.0
info:
  title: Search API
  version: v1
  description: Search API

servers:
  - url: https://falcon.ci.folio.org/search/

paths:
  /instances:
    get:
      operationId: searchInstances
      description: Get a list of instances for CQL query
      parameters:
        - $ref: '#/components/parameters/search-cql-query'
        - $ref: '#/components/parameters/search-pageable-limit'
        - $ref: '#/components/parameters/search-pageable-offset'
        - $ref: '#/components/parameters/x-okapi-tenant-header'
        - in: query
          name: expandAll
          description: Whether to return only basic properties or entire instance.
          schema:
            type: boolean
            default: false
          required: true
      responses:
        '200':
          description: 'Instance search result'
          content:
            application/json:
              example: examples/searchResult.sample
              schema:
                $ref: '#/components/schemas/searchResult'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /index/indices:
    post:
      operationId: createIndices
      description: Creates indices for passed resource name and tenant id in request header.
      parameters:
        - $ref: '#/components/parameters/x-okapi-tenant-header'
      requestBody:
        content:
          application/json:
            example: examples/indexRequestBody.sample
            schema:
              $ref: '#/components/schemas/indexRequestBody'
      responses:
        '200':
          description: Response with created indices and status (error message will be present if operation failed)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/folioCreateIndexResponse'
        '400':
          $ref: '#/components/responses/badRequestResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /index/mappings:
    post:
      operationId: updateMappings
      description: Creates mappings for passed resource name and tenant id in request header.
      parameters:
        - $ref: '#/components/parameters/x-okapi-tenant-header'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/indexRequestBody'
      responses:
        '200':
          description: Response with created indices and status (error message will be present if operation failed)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/folioIndexOperationResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /index/records:
    post:
      operationId: indexRecords
      description: Indexes the records into elasticsearch.
      requestBody:
        content:
          application/json:
            example: examples/indexRecordRequestBody.sample
            schema:
              $ref: '#/components/schemas/indexRecordRequestBody'
      responses:
        '200':
          description: Response with created indices and status (error message will be present if operation failed)
          content:
            application/json:
              example: examples/indexRecordResponse.sample
              schema:
                $ref: '#/components/schemas/folioIndexOperationResponse'
        '500':
          $ref: '#/components/responses/internalServerErrorResponse'

  /config/languages:
    post:
      operationId: createLanguageConfig
      description: Save languages that will be used for analyzers
      requestBody:
        content:
          application/json:
            schema:
              $ref: schemas/languageConfig.json
      responses:
        '200':
          description: Language support has been added.
          content:
            application/json:
              schema:
                $ref: schemas/languageConfig.json
        '422':
          description: Validation error for the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    get:
      operationId: getAllLanguageConfigs
      description: Get all supported languages
      responses:
        '200':
          description: All supported languages
          content:
            application/json:
              schema:
                $ref: schemas/languageConfigs.json

  /config/languages/{code}:
    delete:
      operationId: deleteLanguageConfig
      description: Delete all supported languages
      parameters:
        - $ref: '#/components/parameters/language-code'
      responses:
        '204':
          description: Language support has been removed
        '404':
          description: No language support is found

components:
  schemas:
    instance:
      $ref: schemas/instance.json
    item:
      $ref: schemas/item.json
    indexRequestBody:
      $ref: schemas/indexRequestBody.json
    folioCreateIndexResponse:
      $ref: schemas/folioCreateIndexResponse.json
    folioIndexOperationResponse:
      $ref: schemas/folioIndexOperationResponse.json
    resourceEventBody:
      $ref: schemas/resourceEventBody.json
    indexRecordRequestBody:
      type: array
      items:
        $ref: '#/components/schemas/resourceEventBody'
    searchResult:
      type: object
      properties:
        totalRecords:
          type: integer
          description: Amount of instances found
        instances:
          type: array
          description: List of instances found
          items:
            $ref: '#/components/schemas/instance'
    errorResponse:
      $ref: schemas/errors.json

  responses:
    badRequestResponse:
      description: Validation errors
      content:
        application/json:
          example: examples/validationErrorResponse.sample
          schema:
            $ref: "#/components/schemas/errorResponse"
    internalServerErrorResponse:
      description: When unhandled exception occurred during code execution, e.g. NullPointerException
      content:
        application/json:
          example: examples/unknownError.sample

  parameters:
    language-code:
      name: code
      in: path
      required: true
      description: Language code
      schema:
        type: string
        pattern: '[a-zA-Z]{3}'
    search-cql-query:
      name: query
      in: query
      description: A CQL query string with search conditions.
      schema:
        type: string
      required: true
    search-pageable-offset:
      name: offset
      in: query
      description: Skip over a number of elements by specifying an offset value for the query
      schema:
        default: 0
        minimum: 0
        maximum: 2147483647
        type: integer
    search-pageable-limit:
      name: limit
      in: query
      description: Limit the number of elements returned in the response
      schema:
        default: 100
        minimum: 0
        maximum: 500
        type: integer
    x-okapi-tenant-header:
      name: x-okapi-tenant
      in: header
      description: X-Okapi-Tenant header value
      required: true
      schema:
        type: string
